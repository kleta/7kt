!SESSION 2016-06-07 14:25:32.728 -----------------------------------------------
eclipse.buildId=unknown
java.version=1.8.0
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=ru_RU
Framework arguments:  -clearPersistedState
Command-line arguments:  -os win32 -ws win32 -arch x86 -clearPersistedState

!ENTRY ru.7kt.database 4 0 2016-06-07 14:25:34.387
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: ru.7kt.database [138]
  Unresolved requirement: Require-Bundle: org.springframework.data.jpa; bundle-version="1.7.1"
    -> Bundle-SymbolicName: org.springframework.data.jpa; bundle-version="1.9.4.RELEASE"
       org.springframework.data.jpa [126]
         Unresolved requirement: Import-Package: com.mysema.query; version="[3.6.3,4.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: com.mysema.query.dml; version="[3.6.3,4.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: com.mysema.query.jpa; version="[3.6.3,4.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: com.mysema.query.jpa.impl; version="[3.6.3,4.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: com.mysema.query.support; version="[3.6.3,4.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: com.mysema.query.types; version="[3.6.3,4.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: com.mysema.query.types.expr; version="[3.6.3,4.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: com.mysema.query.types.path; version="[3.6.3,4.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: javax.enterprise.context.spi; version="[1.0.0,2.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: javax.enterprise.event; version="[1.0.0,2.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: javax.enterprise.inject; version="[1.0.0,2.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: javax.enterprise.inject.spi; version="[1.0.0,2.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.apache.openjpa.enhance; version="[2.3.0,3.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.apache.openjpa.persistence; version="[2.3.0,3.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.apache.openjpa.persistence.jdbc; version="[2.3.0,3.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.aspectj.lang; version="[1.8.7,2.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.aspectj.runtime.reflect; version="[1.8.7,2.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.eclipse.persistence.jpa; version="[2.6.2,3.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.eclipse.persistence.queries; version="[2.6.2,3.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.hibernate; version="[3.6.10,4.4.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.hibernate.ejb; version="[3.6.10,4.4.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.hibernate.proxy; version="[3.6.10,4.4.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.joda.time; version="[2.8.2,3.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.springframework.beans.factory.aspectj; version="[4.1.9.RELEASE,5.1.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.threeten.bp; version="[1.3.1,2.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.13,2.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="1.7.13"; version="1.7.13"
              slf4j.api [140]
                No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.13"] because it exports package 'org.slf4j.helpers' and is also exposed to it from resource org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] via the following dependency chain:

  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.13"]
    import: (&(osgi.wiring.package=org.slf4j.impl)(version>=1.6.0))
     |
    export: osgi.wiring.package=org.slf4j.impl; uses:=null
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.helpers)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.helpers
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.equinox.app 0 0 2016-06-07 14:25:34.871
!MESSAGE Product ru.7kt.app.product could not be found.

!ENTRY ru.7kt.database 2 0 2016-06-07 14:25:35.402
!MESSAGE Could not resolve module: ru.7kt.database [138]
  Unresolved requirement: Require-Bundle: org.springframework.data.jpa; bundle-version="1.7.1"
    -> Bundle-SymbolicName: org.springframework.data.jpa; bundle-version="1.9.4.RELEASE"
       org.springframework.data.jpa [126]
         Unresolved requirement: Import-Package: com.mysema.query; version="[3.6.3,4.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: com.mysema.query.dml; version="[3.6.3,4.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: com.mysema.query.jpa; version="[3.6.3,4.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: com.mysema.query.jpa.impl; version="[3.6.3,4.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: com.mysema.query.support; version="[3.6.3,4.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: com.mysema.query.types; version="[3.6.3,4.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: com.mysema.query.types.expr; version="[3.6.3,4.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: com.mysema.query.types.path; version="[3.6.3,4.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: javax.enterprise.context.spi; version="[1.0.0,2.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: javax.enterprise.event; version="[1.0.0,2.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: javax.enterprise.inject; version="[1.0.0,2.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: javax.enterprise.inject.spi; version="[1.0.0,2.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.apache.openjpa.enhance; version="[2.3.0,3.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.apache.openjpa.persistence; version="[2.3.0,3.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.apache.openjpa.persistence.jdbc; version="[2.3.0,3.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.aspectj.lang; version="[1.8.7,2.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.aspectj.runtime.reflect; version="[1.8.7,2.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.eclipse.persistence.jpa; version="[2.6.2,3.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.eclipse.persistence.queries; version="[2.6.2,3.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.hibernate; version="[3.6.10,4.4.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.hibernate.ejb; version="[3.6.10,4.4.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.hibernate.proxy; version="[3.6.10,4.4.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.joda.time; version="[2.8.2,3.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.springframework.beans.factory.aspectj; version="[4.1.9.RELEASE,5.1.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.threeten.bp; version="[1.3.1,2.0.0)"; resolution:="optional"
         Unresolved requirement: Import-Package: org.slf4j; version="[1.7.13,2.0.0)"
           -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="1.7.13"; version="1.7.13"
              slf4j.api [140]
                Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.13"] because it exports package 'org.slf4j.helpers' and is also exposed to it from resource org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] via the following dependency chain:

  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.13"]
    import: (&(osgi.wiring.package=org.slf4j.impl)(version>=1.6.0))
     |
    export: osgi.wiring.package=org.slf4j.impl; uses:=null
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.helpers)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.helpers
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]         Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.13"] because it exports package 'org.slf4j.helpers' and is also exposed to it from resource org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] via the following dependency chain:

  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.13"]
    import: (&(osgi.wiring.package=org.slf4j.impl)(version>=1.6.0))
     |
    export: osgi.wiring.package=org.slf4j.impl; uses:=null
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.helpers)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.helpers
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

!ENTRY slf4j.api 2 0 2016-06-07 14:25:35.410
!MESSAGE Could not resolve module: slf4j.api [140]
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.13"] because it exports package 'org.slf4j.helpers' and is also exposed to it from resource org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] via the following dependency chain:

  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.13"]
    import: (&(osgi.wiring.package=org.slf4j.impl)(version>=1.6.0))
     |
    export: osgi.wiring.package=org.slf4j.impl; uses:=null
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.helpers)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.helpers
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

!ENTRY org.springframework.data.jpa 2 0 2016-06-07 14:25:35.416
!MESSAGE Could not resolve module: org.springframework.data.jpa [126]
  Unresolved requirement: Import-Package: com.mysema.query; version="[3.6.3,4.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: com.mysema.query.dml; version="[3.6.3,4.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: com.mysema.query.jpa; version="[3.6.3,4.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: com.mysema.query.jpa.impl; version="[3.6.3,4.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: com.mysema.query.support; version="[3.6.3,4.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: com.mysema.query.types; version="[3.6.3,4.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: com.mysema.query.types.expr; version="[3.6.3,4.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: com.mysema.query.types.path; version="[3.6.3,4.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: javax.enterprise.context.spi; version="[1.0.0,2.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: javax.enterprise.event; version="[1.0.0,2.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: javax.enterprise.inject; version="[1.0.0,2.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: javax.enterprise.inject.spi; version="[1.0.0,2.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: org.apache.openjpa.enhance; version="[2.3.0,3.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: org.apache.openjpa.persistence; version="[2.3.0,3.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: org.apache.openjpa.persistence.jdbc; version="[2.3.0,3.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: org.aspectj.lang; version="[1.8.7,2.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: org.aspectj.runtime.reflect; version="[1.8.7,2.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: org.eclipse.persistence.jpa; version="[2.6.2,3.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: org.eclipse.persistence.queries; version="[2.6.2,3.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: org.hibernate; version="[3.6.10,4.4.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: org.hibernate.ejb; version="[3.6.10,4.4.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: org.hibernate.proxy; version="[3.6.10,4.4.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: org.joda.time; version="[2.8.2,3.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: org.springframework.beans.factory.aspectj; version="[4.1.9.RELEASE,5.1.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: org.threeten.bp; version="[1.3.1,2.0.0)"; resolution:="optional"
  Unresolved requirement: Import-Package: org.slf4j; version="[1.7.13,2.0.0)"
    -> Export-Package: org.slf4j; bundle-symbolic-name="slf4j.api"; bundle-version="1.7.13"; version="1.7.13"
       slf4j.api [140]
         Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.13"] because it exports package 'org.slf4j.helpers' and is also exposed to it from resource org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] via the following dependency chain:

  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.13"]
    import: (&(osgi.wiring.package=org.slf4j.impl)(version>=1.6.0))
     |
    export: osgi.wiring.package=org.slf4j.impl; uses:=null
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.helpers)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.helpers
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.13"] because it exports package 'org.slf4j.helpers' and is also exposed to it from resource org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"] via the following dependency chain:

  slf4j.api [osgi.identity; osgi.identity="slf4j.api"; type="osgi.bundle"; version:Version="1.7.13"]
    import: (&(osgi.wiring.package=org.slf4j.impl)(version>=1.6.0))
     |
    export: osgi.wiring.package=org.slf4j.impl; uses:=null
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]
    require: (&(osgi.wiring.bundle=ch.qos.logback.classic)(&(bundle-version>=1.0.7)(!(bundle-version>=1.0.8))))
     |
    provide: osgi.wiring.bundle; bundle-version:Version="1.0.7.v20121108-1250"; osgi.wiring.bundle="ch.qos.logback.classic"
  ch.qos.logback.classic [osgi.identity; osgi.identity="ch.qos.logback.classic"; type="osgi.bundle"; version:Version="1.0.7.v20121108-1250"]
    import: (&(osgi.wiring.package=org.slf4j.helpers)(version>=1.7.0))
     |
    export: osgi.wiring.package: org.slf4j.helpers
  org.slf4j.api [osgi.identity; osgi.identity="org.slf4j.api"; type="osgi.bundle"; version:Version="1.7.2.v20121108-1250"]

!ENTRY org.eclipse.osgi 4 0 2016-06-07 14:25:35.421
!MESSAGE Application error
!STACK 1
java.lang.NullPointerException
	at org.eclipse.emf.common.util.URI$URIPool$PlatformAccessUnit.setValue(URI.java:865)
	at org.eclipse.emf.common.util.URI$URIPool.intern(URI.java:1949)
	at org.eclipse.emf.common.util.URI.createPlatformPluginURI(URI.java:2718)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.determineApplicationModelURI(E4Application.java:426)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.loadApplicationModel(E4Application.java:350)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.createE4Workbench(E4Application.java:254)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.start(E4Application.java:145)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
